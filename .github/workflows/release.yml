name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g., v1.0.0)'
        required: true
        type: string

jobs:
  create-release:
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run full test suite
      run: |
        python -m pytest tests/ -v --cov=app --cov-report=xml --cov-report=term-missing

    - name: Build Docker image
      run: |
        docker build -t task-manager-api:${{ github.ref_name }} .

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref_name }}
        release_name: Release ${{ github.ref_name }}
        body: |
          ## TaskManagerAPI Release ${{ github.ref_name }}
          
          ### Changes
          - See commit history for detailed changes
          
          ### Docker Image
          ```bash
          docker pull ghcr.io/${{ github.repository }}:${{ github.ref_name }}
          ```
          
          ### Installation
          ```bash
          git clone https://github.com/${{ github.repository }}.git
          cd TaskManagerAPI
          git checkout ${{ github.ref_name }}
          pip install -r requirements.txt
          python app.py
          ```
          
          ### Testing
          ```bash
          python run_tests.py
          ```
        draft: false
        prerelease: false

  build-and-push:
    runs-on: ubuntu-latest
    needs: create-release

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ghcr.io/${{ github.repository }}
        tags: |
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=semver,pattern={{major}}
          type=raw,value=latest

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}

  deploy-production:
    runs-on: ubuntu-latest
    needs: [create-release, build-and-push]

    steps:
    - name: Deploy to production
      run: |
        echo "üöÄ Deploying release ${{ github.ref_name }} to production..."
        echo "This would deploy the release to production environment"
        echo "Docker image: ghcr.io/${{ github.repository }}:${{ github.ref_name }}"

    - name: Run production health checks
      run: |
        echo "üîç Running production health checks..."
        echo "This would verify the production deployment"

    - name: Notify deployment
      run: |
        echo "‚úÖ Release ${{ github.ref_name }} deployed to production successfully!"
        echo "üåê Production URL: https://your-domain.com"
