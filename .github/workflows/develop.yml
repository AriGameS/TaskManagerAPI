name: Develop Branch Pipeline

on:
  push:
    branches: [ develop ]
  pull_request:
    branches: [ develop ]

jobs:
  test-and-build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run tests
      run: |
        python -m pytest tests/ -v --cov=app --cov-report=xml --cov-report=term-missing

    - name: Run integration tests
      run: |
        python app.py &
        sleep 5
        python -m pytest tests/test_api_integration.py -v || true
        bash tests/test_curl.sh || true

    - name: Build Docker image for staging
      run: |
        docker build -t task-manager-api:develop .

    - name: Deploy to staging
      run: |
        echo "🚀 Deploying to staging environment..."
        echo "This would deploy the develop branch to a staging environment"
        echo "Image: task-manager-api:develop"

    - name: Run staging tests
      run: |
        echo "🧪 Running staging environment tests..."
        echo "This would run additional tests against the staging deployment"

  notify-staging:
    runs-on: ubuntu-latest
    needs: test-and-build
    if: always()

    steps:
    - name: Notify staging deployment
      run: |
        if [ "${{ needs.test-and-build.result }}" == "success" ]; then
          echo "✅ Develop branch deployed to staging successfully!"
          echo "🌐 Staging URL: https://staging.your-domain.com"
        else
          echo "❌ Develop branch deployment to staging failed!"
        fi
